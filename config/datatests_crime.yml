testname: Crimes
onsuccess:
- name: truncate crimes
  text: TRUNCATE TABLE gisowner.coa_opendata_crime;
  values:
- name: insert crimes
  text: INSERT INTO gisowner.coa_opendata_crime (SELECT * FROM gisowner.coa_opendata_crime_hold);
  values:
tests:
- name: count crimes
  text: SELECT count(*) > $1 as check FROM gisowner.coa_opendata_crime_hold;
  values: [10000]
- name: pid count
  text: SELECT DISTINCT COUNT(pid) OVER() > $1 as check FROM gisowner.coa_opendata_crime_hold GROUP BY pid HAVING COUNT(pid) > 0 ;
  values: [1000]
- name: count neighborhood in crime
  text: SELECT count(*) > $1 as check FROM gisowner.coa_opendata_crime_hold WHERE neighborhood is not null;
  values: [100]
- name: Duplicate PIDS
  text: SELECT COALESCE( (SELECT count(pid)  as check from gisowner.coa_opendata_crime_hold group by pid having count(pid) > 1),0) = $1 as check;
  values: [0]
- name: Duplicate idnum
  text: SELECT COALESCE( (SELECT count(idnum)  as check from gisowner.coa_opendata_crime_hold group by idnum having count(idnum) > 1),0) = $1 as check;
  values: [0]
- name: offense types
  text: SELECT DISTINCT COUNT(offense) OVER() > $1 as check FROM gisowner.coa_opendata_crime_hold GROUP BY offense HAVING COUNT(offense) > 0 ;
  values: [5]
- name: severity types
  text: SELECT DISTINCT COUNT(severity) OVER() > $1 as check FROM gisowner.coa_opendata_crime_hold GROUP BY severity HAVING COUNT(severity) > 0 ;
  values: [5]
- name: source types
  text: SELECT DISTINCT COUNT(source) OVER() = $1 as check FROM gisowner.coa_opendata_crime_hold GROUP BY source HAVING COUNT(source) > 0 ;
  values: [2]
- name:  crimes in last 2 weeks
  text: SELECT COALESCE( ( SELECT count(*) FROM gisowner.coa_opendata_crime_hold WHERE  EXTRACT(WEEK FROM thedate) >= (EXTRACT(WEEK FROM now())-1)  and EXTRACT(YEAR FROM thedate) = EXTRACT(YEAR FROM now())),0) > $1 as check;
  values: [0]
- name:  crimes have multiple years
  text: SELECT DISTINCT COUNT(EXTRACT(YEAR FROM thedate)) OVER() > $1 as check FROM gisowner.coa_opendata_crime_hold GROUP BY EXTRACT(YEAR FROM thedate) HAVING COUNT(EXTRACT(YEAR FROM thedate)) > 0 ;
  values: [3]
